definition:
  openapi: 3.0.0
  info:
    title: Gyors éttermi rendszer API dokumentáció
    description: A /user/login tól kapott tokent kell be másolni az autentikációhoz
    version: 0.0.2
  servers:
    - url: https://mateszadam.koyeb.app/
    - url: http://localhost:5005/
  components:
    securitySchemes:
      adminBearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT
        description: 'Enter your bearer token in the format **Bearer <token>**'
      customerBearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT
        description: 'Enter your bearer token in the format **Bearer <token>**'
      kitchenBearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT
        description: 'Enter your bearer token in the format **Bearer <token>**'
      salesmanBearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT
        description: 'Enter your bearer token in the format **Bearer <token>**'
    parameters:
      AcceptLanguage:
        name: Accept-Language
        in: header
        default: hu
        description: Language preference for response (hu, en-GB)
        required: false
        schema:
          type: string
  security:
    - adminBearerAuth: []
    - customerBearerAuth: []
    - salesmanBearerAuth: []
    - kitchenBearerAuth: []
apis: [./src/swagger/swagger.yaml]

paths:
  # Category Paths

  /category/main:
    get:
      summary: Get main categories
      tags: [Category]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      responses:
        '200':
          description: List of main categories
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    name:
                      type: string
                    englishName:
                      type: string
                    icon:
                      type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /category/sub:
    get:
      summary: Get sub categories
      tags: [Category]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - in: query
          name: main
          schema:
            type: string
          description: ID of the main category to filter subcategories
          required: true
      responses:
        '200':
          description: List of sub categories
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    name:
                      type: string
                    englishName:
                      type: string
                    icon:
                      type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /category:
    post:
      summary: Add a new category
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      tags: [Category]
      security:
        - adminBearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Category added successfully
        '400':
          description: Bad request
    get:
      summary: Filter categories
      tags: [Category]
      security:
        - adminBearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - in: query
          name: page
          schema:
            type: integer
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
          description: Number of items per page
        - in: query
          name: _id
          schema:
            type: string
          description: Category ID
        - in: query
          name: name
          schema:
            type: string
          description: Category name
        - in: query
          name: englishName
          schema:
            type: string
          description: Category English name
        - in: query
          name: icon
          schema:
            type: string
          description: Category icon
        - in: query
          name: fields
          schema:
            type: array
            items:
              type: string
          description: Fields to include in the response
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                        englishName:
                          type: string
                        icon:
                          type: string
                  pageCount:
                    type: integer
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /category/{id}:
    put:
      summary: Modify a category
      tags: [Category]
      security:
        - adminBearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Category modified successfully
          $ref: '#/components/schemas/Category'
        '400':
          description: Bad request
    delete:
      summary: Delete a category
      tags: [Category]
      security:
        - adminBearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Category deleted successfully
          $ref: '#/components/schemas/Category'
        '400':
          description: Bad request
  # Food Paths
  /food:
    post:
      summary: Add a new food item
      tags: [Food]
      security:
        - adminBearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Food'
      responses:
        '200':
          description: Food item added successfully
        '400':
          description: Bad request
    get:
      summary: Filter food items
      tags: [Food]
      security:
        - adminBearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
          description: Number of items per page
        - in: query
          name: _id
          schema:
            type: string
          description: Food item ID
        - in: query
          name: name
          schema:
            type: string
          description: Name of the food item
        - in: query
          name: englishName
          schema:
            type: string
          description: English name of the food item
        - in: query
          name: minPrice
          schema:
            type: number
          description: Minimum price of the food item
        - in: query
          name: maxPrice
          schema:
            type: number
          description: Maximum price of the food item
        - in: query
          name: isEnabled
          schema:
            type: boolean
          description: Whether the food item is enabled
        - in: query
          name: categoryId
          schema:
            type: string
          description: Category ID of the food item
        - in: query
          name: subCategoryId
          schema:
            type: string
          description: Sub-category ID of the food item
        - in: query
          name: image
          schema:
            type: string
          description: Image URL of the food item
        - in: query
          name: fields
          schema:
            type: array
            items:
              type: string
          description: Fields to include in the response
      responses:
        '200':
          description: A list of filtered food items
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                  pageCount:
                    type: integer
                    description: Total number of pages
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
  /food/{id}:
    put:
      summary: Update a food item
      tags: [Food]
      security:
        - adminBearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Food item ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Food'
      responses:
        '200':
          description: Food item updated successfully
        '400':
          description: Bad request
    delete:
      summary: Delete a food item
      tags: [Food]
      security:
        - adminBearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'

        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Food item ID
      responses:
        '200':
          description: Food item deleted successfully
        '400':
          description: Bad request
# Image paths
/images/name/{imageName}:
  get:
    summary: Retrieve an image
    tags: [Images]
    security:
      - adminBearerAuth: []
      - customerBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - in: path
        name: imageName
        required: true
        schema:
          type: string
        description: The name of the image to retrieve
    responses:
      200:
        description: An image file.
        content:
          image/svg+xml:
            schema:
              type: string
              format: binary
      400:
        description: Bad request
/images:
  post:
    summary: Upload an image
    tags: [Images]
    security:
      - adminBearerAuth: []
      - customerBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              image:
                type: string
                format: binary
    responses:
      200:
        description: Image uploaded successfully
      400:
        description: Bad request
/images/all:
  get:
    summary: List all images
    tags: [Images]
    security:
      - adminBearerAuth: []
      - customerBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
    responses:
      200:
        description: A list of all images
      400:
        description: Bad request
/images/profile:
  get:
    summary: List all profile pictures
    security:
      - adminBearerAuth: []
      - customerBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
    tags: [Images]
    responses:
      200:
        description: A list of all profile pictures
      400:
        description: Bad request
/images/profile/{name}:
  get:
    summary: Get profile picture by name
    tags: [Images]
    security:
      - adminBearerAuth: []
      - customerBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - in: path
        name: name
        required: true
        schema:
          type: string
        description: The name of the profile picture to retrieve
    responses:
      200:
        description: A profile picture file.
        content:
          image/svg+xml:
            schema:
              type: string
              format: binary
      400:
        description: Bad request

# Inventory
/inventory:
  post:
    tags:
      - Inventory
    summary: Add a new material change
    security:
      - adminBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MaterialChange'
    responses:
      '200':
        description: Material change added successfully
      '400':
        description: Bad request
  get:
    summary: Get material changes
    tags:
      - Inventory
    security:
      - adminBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - name: page
        in: query
        description: Page number
        required: false
        schema:
          type: integer
      - name: limit
        in: query
        description: Number of items per page
        required: false
        schema:
          type: integer
      - name: _id
        in: query
        description: ID of the change
        required: false
        schema:
          type: string
      - name: materialId
        in: query
        description: ID of the material
        required: false
        schema:
          type: string
      - name: name
        in: query
        description: Name of the material
        required: false
        schema:
          type: string
      - name: minQuantity
        in: query
        description: Quantity of the material
        required: false
        schema:
          type: number
      - name: maxQuantity
        in: query
        description: Quantity of the material
        required: false
        schema:
          type: number
      - name: message
        in: query
        description: Message associated with the change
        required: false
        schema:
          type: string
      - name: minDate
        in: query
        description: Minimum date for the change
        required: false
        schema:
          type: string
          format: date-time
      - name: maxDate
        in: query
        description: Maximum date for the change
        required: false
        schema:
          type: string
          format: date-time
      - name: fields
        in: query
        description: Fields to include in the response
        required: false
        schema:
          type: array
          items:
            type: string
    responses:
      '200':
        description: A list of material changes
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      materialId:
                        type: string
                      quantity:
                        type: number
                      message:
                        type: string
                      date:
                        type: string
                        format: date-time
                      _id:
                        type: string
                pageCount:
                  type: integer
      '400':
        description: Bad request
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
/inventory/{id}:
  put:
    tags:
      - Inventory
    summary: Update a material change
    security:
      - adminBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - name: id
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MaterialChange'
    responses:
      '200':
        description: Material change updated successfully
      '400':
        description: Bad request
  delete:
    tags:
      - Inventory
    summary: Delete a material change
    security:
      - adminBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - name: id
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Material change deleted successfully
      '400':
        description: Bad request

  # Order
/order:
  post:
    summary: Create a new order
    tags: [Order]
    security:
      - adminBearerAuth: []
      - customerBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'
    responses:
      '201':
        description: Order created successfully
      '400':
        description: Bad request
  get:
    summary: Get all orders by page
    tags: [Order]
    security:
      - adminBearerAuth: []
      - customerBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - name: page
        in: query
        schema:
          type: integer
        description: Page number for pagination
      - name: limit
        in: query
        schema:
          type: integer
        description: Number of items per page
      - name: _id
        in: query
        schema:
          type: string
        description: Filter by order ID
      - name: orderNumber
        in: query
        schema:
          type: integer
        description: Filter by order number
      - name: costumerId
        in: query
        schema:
          type: string
        description: Filter by customer ID
      - name: minTotalPrice
        in: query
        schema:
          type: number
        description: Minimum total price
      - name: maxTotalPrice
        in: query
        schema:
          type: number
        description: Maximum total price
      - name: minOrderedTime
        in: query
        schema:
          type: string
          format: date-time
        description: Minimum ordered time
      - name: maxOrderedTime
        in: query
        schema:
          type: string
          format: date-time
        description: Maximum ordered time
      - name: minFinishedTime
        in: query
        schema:
          type: string
          format: date-time
        description: Minimum finished time
      - name: maxFinishedTime
        in: query
        schema:
          type: string
          format: date-time
        description: Maximum finished time
      - name: minFinishedCokingTime
        in: query
        schema:
          type: string
          format: date-time
        description: Minimum finished cooking time
      - name: maxFinishedCokingTime
        in: query
        schema:
          type: string
          format: date-time
        description: Maximum finished cooking time
      - name: fields
        in: query
        schema:
          type: array
        description: Fields to include in the response
    responses:
      '200':
        description: List of orders
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                pageCount:
                  type: integer
      '400':
        description: Bad request
/order/salesman:
  get:
    summary: Get all ongoing orders for salesman
    tags: [Order]
    security:
      - salesmanBearerAuth: []
      - adminBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
    responses:
      '200':
        description: List of ongoing orders
      '400':
        description: Bad request
/order/kitchen:
  get:
    summary: Get all orders for kitchen
    tags: [Order]

    security:
      - kitchenBearerAuth: []
      - adminBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
    responses:
      '200':
        description: List of orders for kitchen
      '400':
        description: Bad request
/order/display:
  get:
    summary: Get orders for display
    tags: [Order]
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
    responses:
      '200':
        description: List of orders for display
      '400':
        description: Bad request
/order/finish/{id}:
  patch:
    summary: Mark order as finished by kitchen
    tags: [Order]

    security:
      - adminBearerAuth: []
      - kitchenBearerAuth: []

    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - name: id
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Order marked as finished
      '400':
        description: Bad request
/order/handover/{id}:
  patch:
    summary: Mark order as received by salesman
    tags: [Order]

    security:
      - adminBearerAuth: []
      - salesmanBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - name: id
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Order marked as received
      '400':
        description: Bad request
/order/revert/finish/{id}:
  patch:
    summary: Revert order finish by kitchen
    tags: [Order]

    security:
      - kitchenBearerAuth: []
      - adminBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - name: id
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Order finish reverted
      '400':
        description: Bad request
/order/revert/handover/{id}:
  patch:
    summary: Revert order received by salesman
    tags: [Order]

    security:
      - salesmanBearerAuth: []
      - adminBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'

      - name: id
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Order received reverted
      '400':
        description: Bad request

# Token validation
/token/validate:
  get:
    summary: Validate token
    tags: [Token validation]
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
    responses:
      200:
        description: Token is valid
      400:
        description: Token is invalid

/material:
  post:
    summary: Add a new material
    tags: [Material]
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
    security:
      - adminBearerAuth: []
      - customerBearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Material'
    responses:
      '200':
        description: Material added successfully
      '400':
        description: Bad request
  get:
    summary: Get all materials
    description: Retrieve a paginated list of materials with optional filters
    tags: [Material]
    security:
      - adminBearerAuth: []
      - customerBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - in: query
        name: page
        schema:
          type: integer
        description: Page number for pagination
      - in: query
        name: limit
        schema:
          type: integer
        description: Number of items per page
      - in: query
        name: _id
        schema:
          type: string
        description: Filter by material ID
      - in: query
        name: englishName
        schema:
          type: string
        description: Filter by English name (supports regex)
      - in: query
        name: unit
        schema:
          type: string
        description: Filter by unit (supports regex)
      - in: query
        name: minInStock
        schema:
          type: string
        description: Minimum in stock
      - in: query
        name: maxInStock
        schema:
          type: string
        description: Maximum in stock
      - in: query
        name: name
        schema:
          type: string
        description: Filter by name (supports regex)
      - in: query
        name: usageOneWeekAgo
        schema:
          type: string
        description: Minimum usage one week ago
      - in: query
        name: isEnough
        schema:
          type: boolean
        description: Whether the material is enough
      - in: query
        name: fields
        schema:
          type: array
          items:
            type: string
        description: Fields to include in the response
    responses:
      '200':
        description: A paginated list of materials
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      _id:
                        type: string
                      name:
                        type: string
                      englishName:
                        type: string
                      unit:
                        type: string
                pageCount:
                  type: integer
                  description: Total number of pages
      '400':
        description: Bad request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Error message
/material/{id}:
  put:
    summary: Update a material by ID
    tags: [Material]

    security:
      - adminBearerAuth: []
      - customerBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - in: path
        name: id
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Material'
    responses:
      '200':
        description: Material updated successfully
      '400':
        description: Bad request
  delete:
    summary: Delete a material by ID
    tags: [Material]

    security:
      - adminBearerAuth: []
      - customerBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - in: path
        name: id
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Material deleted successfully
      '400':
        description: Bad request
# User handling
/user/all:
  get:
    tags: [User handling]
    security:
      - adminBearerAuth: []
    summary: Get all users
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
    responses:
      201:
        description: User registered successfully
      400:
        description: Bad request
      401:
        description: Not authorized

/user/register/customer:
  post:
    tags: [User handling]
    summary: Register a new user
    security: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - password
              - email
            properties:
              name:
                type: string
                default: customerUser
              password:
                type: string
                default: customerUser!1
              email:
                type: string
                default: admin@gmail.hu
    responses:
      201:
        description: User registered successfully

/user/register/admin:
  post:
    tags: [User handling]
    summary: Register a new admin
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
    security:
      - adminBearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - password
              - email
              - role
            properties:
              name:
                type: string
                default: adminUser
              password:
                type: string
                default: adminUser!1
              email:
                type: string
                default: admin@gmail.com
              role:
                type: string
                default: admin
    responses:
      201:
        description: Admin registered successfully
      400:
        description: Bad request

/user/delete/admin/{id}:
  delete:
    tags: [User handling]
    security:
      - adminBearerAuth: []
    summary: Delete users with admin roles (only admin can access)
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: The id of the user
    responses:
      201:
        description: Deleted successfully
      400:
        description: Bad request

/user/delete/customer/{id}:
  delete:
    tags: [User handling]
    summary: Delete costumers.
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: The id of the user
    security:
      - adminBearerAuth: []
      - customerBearerAuth: []
    responses:
      201:
        description: Deleted successfully
      400:
        description: Bad request

/user/login:
  post:
    tags: [User handling]
    summary: Login a user
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
    security: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - password
            properties:
              name:
                type: string
                default: admin
              password:
                type: string
                default: admin
    responses:
      200:
        description: User logged in successfully

/user/logout:
  post:
    tags: [User handling]
    summary: Logout a user
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
    security:
      - adminBearerAuth: []
    responses:
      200:
        description: User logged out successfully

/user/picture/change/{newImageName}:
  post:
    tags: [User handling]
    summary: Change profile picture
    security:
      - adminBearerAuth: []
      - customerBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - in: path
        name: newImageName
        required: true
        schema:
          type: string
        description: The new image name for the profile picture
    responses:
      200:
        description: Profile picture changed successfully
/user/forgetPassword:
  post:
    tags: [User handling]
    summary: Send password change email
    security: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - email
            properties:
              email:
                type: string
    responses:
      '200':
        description: Email sent successfully
      '400':
        description: Bad request

/user/changePassword:
  post:
    tags: [User handling]
    summary: Change user password
    security: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - token
              - password
            properties:
              token:
                type: string
              password:
                type: string
    responses:
      '200':
        description: Password changed successfully
      '400':
        description: Bad request
  # Dashboard
/dashboard/registeredUsers:
  get:
    summary: Get registered users
    tags: [Dashboard]
    security:
      - adminBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - in: query
        name: startDate
        schema:
          type: string
          format: date
          default: 2025-01-01
        required: true
      - in: query
        name: endDate
        schema:
          type: string
          format: date
          default: 2025-03-01
        required: true
    responses:
      '200':
        description: Successful response
      '400':
        description: Bad request
/dashboard/revenue:
  get:
    summary: Get revenue
    tags: [Dashboard]
    security:
      - adminBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - in: query
        name: startDate
        schema:
          type: string
          format: date
          default: 2025-01-01
        required: true
      - in: query
        name: endDate
        schema:
          type: string
          format: date
          default: 2025-03-01
        required: true
    responses:
      '200':
        description: Successful response
      '400':
        description: Bad request
/dashboard/soldProducts:
  get:
    summary: Get sold products
    tags: [Dashboard]

    security:
      - adminBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - in: query
        name: startDate
        schema:
          type: string
          format: date
          default: 2025-01-01
        required: true
      - in: query
        name: endDate
        schema:
          type: string
          format: date
          default: 2025-03-01

        required: true
    responses:
      '200':
        description: Successful response
      '400':
        description: Bad request
/dashboard/orderCount:
  get:
    summary: Get order count
    tags: [Dashboard]

    security:
      - adminBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - in: query
        name: startDate
        schema:
          type: string
          format: date
          default: 2025-01-01
        required: true
      - in: query
        name: endDate
        schema:
          type: string
          format: date
          default: 2025-03-01

        required: true
    responses:
      '200':
        description: Successful response
      '400':
        description: Bad request
/dashboard/categorizedOrders:
  get:
    summary: Get categorized orders
    tags: [Dashboard]

    security:
      - adminBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - in: query
        name: startDate
        schema:
          type: string
          format: date
          default: 2025-01-01
        required: true
      - in: query
        name: endDate
        schema:
          type: string
          format: date
          default: 2025-03-01

        required: true
      - in: query
        name: categories
        schema:
          type: array
          default: ['3000', '6000', '9000']
    responses:
      '200':
        description: Successful response
      '400':
        description: Bad request
/dashboard/orderTimes:
  get:
    summary: Get order times
    tags: [Dashboard]

    security:
      - adminBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - in: query
        name: startDate
        schema:
          type: string
          format: date
          default: 2025-01-01
        required: true
      - in: query
        name: endDate
        schema:
          type: string
          format: date
          default: 2025-03-01

        required: true
    responses:
      '200':
        description: Successful response
      '400':
        description: Bad request
/dashboard/totalOrders:
  get:
    summary: Get total orders
    tags: [Dashboard]

    security:
      - adminBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
    responses:
      '200':
        description: Successful response
      '400':
        description: Bad request

/dashboard/ordersThisWeek:
  get:
    summary: Get orders and sold products for this week
    tags: [Dashboard]
    security:
      - adminBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - in: query
        name: date
        schema:
          type: string
          format: date
          description: Date to determine the week
        required: true
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                orders:
                  type: integer
                  description: Number of orders
      '400':
        description: Bad request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Error message
/dashboard/timeOfOrders:
  get:
    summary: Get production time of orders
    tags: [Dashboard]
    security:
      - adminBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - in: query
        name: date
        schema:
          type: string
          format: date
          description: Date to determine the week
        required: true
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                orders:
                  type: array
                  items:
                    type: object
                    properties:
                      _id:
                        type: string
                      count:
                        type: integer
      '400':
        description: Bad request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Error message
/dashboard/cookingTime:
  get:
    summary: Get average cooking time for each day of the week
    tags: [Dashboard]
    security:
      - adminBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - in: query
        name: date
        schema:
          type: string
          format: date
          description: Date to determine the week
        required: true
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                orders:
                  type: array
                  items:
                    type: object
                    properties:
                      _id:
                        type: string
                      avgCookingTime:
                        type: number
                        description: Average cooking time in hours
      '400':
        description: Bad request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Error message

# Components
components:
  schemas:
    Food:
      type: object
      required:
        - name
        - englishName
        - price
        - material

      properties:
        name:
          type: string
        price:
          type: number
        materials:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
              quantity:
                type: number
        isEnabled:
          type: boolean
          default: true
        categoryId:
          type: string
          default: 679f462818947c0fa463a88f
        subCategoryId:
          type: array
          items:
            type: string
            default: 679f462818947c0fa463a88f
        englishName:
          type: string
        image:
          type: string
          default: no-image.svg
    MaterialChange:
      type: object
      properties:
        materialId:
          type: string
        quantity:
          type: number
        message:
          type: string
      required:
        - materialId
        - quantity
        - message
    Material:
      type: object
      properties:
        name:
          type: string
        englishName:
          type: string
        unit:
          type: string
      required:
        - name
        - englishName
        - unit
    Category:
      type: object
      properties:
        name:
          type: string
        icon:
          type: string
        englishName:
          type: string
      required:
        - name
        - icon
        - englishName
    Order:
      type: object
      required:
        - costumerId
        - orderedProducts
      properties:
        costumerId:
          type: string
          default: 6793b122d55c7354ff36be8f
        orderedProducts:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
                default: 67a74ef1b660887ac98cc8f7
              quantity:
                type: integer
                default: 1
